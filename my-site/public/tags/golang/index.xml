<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Damon Diaz â€“ Golang</title>
    <link>http://localhost:1313/tags/golang/</link>
    <description>Recent content in Golang on Damon Diaz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="http://localhost:1313/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>RSVP Hub</title>
      <link>http://localhost:1313/projects/example-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/example-project/</guid>
      <description>
        
        
        &lt;p&gt;A minimal, self-hosted RSVP system built with Go, Tailwind CSS, and Alpine.js&lt;/p&gt;
&lt;h2&gt;Overview&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;overview&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#overview&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When planning my baby shower, I needed a simple RSVP system. Instead of using existing solutions, I decided to build my own minimal version as a side project. This gave me complete control over the features while keeping it lightweight and efficient.&lt;/p&gt;
&lt;h2&gt;Tech Stack&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;tech-stack&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#tech-stack&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Go (Golang)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Less memory footprint for vps deployments&lt;/li&gt;
&lt;li&gt;Chosen for its simplicity and excellent performance&lt;/li&gt;
&lt;li&gt;Built-in HTTP server capabilities&lt;/li&gt;
&lt;li&gt;Easy deployment with single binary&lt;/li&gt;
&lt;li&gt;Minimal dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Frontend&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tailwind CSS for utility-first styling&lt;/li&gt;
&lt;li&gt;Alpine.js for minimal JavaScript interactivity&lt;/li&gt;
&lt;li&gt;HTML templates with Go&amp;rsquo;s template package&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Key Features&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;key-features&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#key-features&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Simple RSVP form with guest details&lt;/li&gt;
&lt;li&gt;Mobile-responsive design&lt;/li&gt;
&lt;li&gt;Admin dashboard for guest list management&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Technical Implementation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;technical-implementation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#technical-implementation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Used Go&amp;rsquo;s standard library for routing and handling HTTP requests&lt;/li&gt;
&lt;li&gt;Implemented server-side validation for form submissions&lt;/li&gt;
&lt;li&gt;Stored data in memory for simplicity and portability, only for one time use so for my use case it was fine&lt;/li&gt;
&lt;li&gt;Utilized Alpine.js for dynamic form validation and UI updates&lt;/li&gt;
&lt;li&gt;Designed with Tailwind CSS for a clean, modern interface&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Learnings&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;learnings&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#learnings&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Practiced keeping dependencies minimal&lt;/li&gt;
&lt;li&gt;Balanced between features and simplicity&lt;/li&gt;
&lt;li&gt;Gained experience with Alpine.js for lightweight interactivity&lt;/li&gt;
&lt;li&gt;Improved understanding of Go&amp;rsquo;s templating system&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
  </channel>
</rss>
